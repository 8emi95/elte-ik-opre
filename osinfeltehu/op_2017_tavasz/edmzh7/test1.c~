#include <stdio.h>
#include <stdlib.h>
#include <unistd.h> 
#include <signal.h>
#include <time.h>

void handler(int sig){
	printf("Child is READY to play\n");
	signal(sig, handler);
}


int main()
{
	signal(SIGUSR1, handler);
	srand(time(NULL));
	int random = rand() % 100 + 1;
	printf("Parent gives a random number: %i\n", random);
	int child;
	int pipe1[2];
	if(pipe(pipe1) == -1){
		perror("PIPE error\n");
		exit(1);
	}
	
	child = fork();
	
	if(child < 0){
		perror("Error fork child!");
		exit(1);
}
if (child == 0){
		
		kill(getppid(), SIGUSR1);
		close(pipe1[0]); 
		
		int random_child = rand() % 100 + 1;
		
		write(pipe1[1], &random_child, sizeof(int));
		close(pipe1[1]); 
		exit(0);
		
}

else if(child > 0) {
		
		pause(); 
		close(pipe1[1]);
		int n;
		read(pipe1[0], &n, sizeof(int));
		printf("Child gives random number: %i\n", n); 
		close(pipe1[0]);
		if(n == random){
			
		}
		
	}
	
	
	return 0;
}