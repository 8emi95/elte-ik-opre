ZH --> Vagy osztott memória vagy üzenet sor

ÜZENETEK(message.c)
	¤ Üzenet fogadásnál ha nem az üzenet kulcsát adjuk meg, hiába várja az üzenetet. Kivéve ha 0-át adunk meg,
akkor bármit elfogad.
		'ipcs' parancs -->Kilistázza az aktuálisan nyitott üzenetsorokat, memória szegmenseket és szemamorfokat.
			- törlése: 'ipcrm -q msg_id'
			- létrehozás: 'ipcnk -Q'
	¤ Prioritásos POSIX üzenetek
		- <mqueue.h> -->¤ mq_open(név, mód)
				 	(név, mód, engedélyek, &attribútumok)
					 Vagy létrehoz egy üzenetsort, vagy csatlakozik egy már meglévõhöz.
					 Módok: O_RDONLY, O_WRONLY, O_RDWR, O_CREATE(ez adja meg hogy vagy csatlakozzon,
 vagy hozza létre),O_EXCL(csak createl együtt), O_NONBLOCK(Amikor küldünk vagy fogadunk akkor nem blokkolja a folyamatot
 amibõl küldünk és fogadunk)
					 Engedélyek: Szokásos fájl jogosultságok
					 Attribútumok: mq_attr:
							mq_maxmsg --> Üzenet sorba helyezhetõ üzenetetk maximális száma
							mq_msgsize --> Üzenet maximáli mérete byte-okban
							NULL --> Alapértelmezett üzenetszám és méret adódik át
					Visszatérési értéke: mqd_t típusú üzenetsor leíró vagy -1, ha hiba van
				¤ KÜLDÉS: mq_send(üzenet_leíró, &üzenet, mérete, &prioritás(elõjel nélküli egész mutatója))
					Prioritás minnél magasabb, annál elõbb kerüla az üzenetsorba
					Azonos prioritásúak sorrendben
				¤ FOGADÁS mq_receive(üzenetsor_leíró, &üzenet, max_méret, &prioritás)					
					Pritoritás itt nem szûrésre van, csak beolvassa az adott üzenet prioritását.
					Visszatérési érték: üzenet mérete byteokban vagy -1, ha hiba
				¤ LEZÁRÁS: mq_close(leíró) --> csak lezárja, nem szünteti meg az üzenetsort
				¤ mq_unlink(leíró) --> ténylegesen törli az üzenetsort
				¤ mq_notify(leíró, &signal) --> 0, siker | -1, sikertelen
					SI_MESGQ --> Jelzi hogy egy üzenet küldi a signalt.

OSZTOTT MEMÓRA
	Lehetõvé teszi hogy egy kijelölt memória területet más-más folyamatok vehessék igénybe
	<sys/shm.h>: ¤ shmget(kulcs, méret, flagek) --> létrehoz vagy csatlakozik egy meglévõ memória címhez, tényleges kapcsolódás
nem itt történik.
			flagek: fájljogosutságok, IPC_CREATE, IPC_EXCL
		     ¤ shmat(shmid(shmget-bõl kapjuk), NULL, 0) --> Ezzel kapcsolódik a folyamat ténylegesen az osztott memóriához
			shmid --> ipcs lekérdezésben is így szerepel
		     ¤ shmdt(shmaddr) --> Leválasztja a folyamatról az osztott memóriát
		     ¤ shmctl(shmid, IPC_RMID, NULL) --> Ténylegesen törli
Példa program: osztmem.c


Kulcs --> key_t kulcs; kulcs = ftok("/temp",1); --> Csinálok kulcsot, másik folyamatba is ugyanígy megcsinálom "/temp"-el és akkor
tudom õket összekötni


SZEMAFOR
	Típusai: 
		System5: <sys/sem.h> ¤ smget(kulcs, szemaforok_száma, flagek) --> 0-tól számozzuk õket
					semval --> szemafor értéke, 0-nál kisebb nem lehet
					lérehozáskor csak memória szemetek, nincsenek még inicializálva
					visszatérés: semid(ipc-be így van hivatkozva) | -1, ha nem sikerült
				     ¤ semop(semid, &végrehajtandó_mûveletek_tömbje, mûveletek_száma(<= tömb mérete))
					mûveletek tömbje: struct sembuf{
								sem_num --> szemafor száma amin a mûveltet végre szeretnék hajtani
								sem_flag --> short típusú, értékei lehetnek: IPC_NOWAIT, SEM_UNDO, 0
								sem_op --> ténylegesen végrehajtandó mûvelet
							  }
							  sem_op --> > 0 : megnöveli 1-el a szemafor értékét
								     = 0 : a mûvelet várjon amíg a szemafor 0 értéket vesz fel
								     < 0 : csökkentésre várakozunk. Megnézi hogy az itt megadott 
értéket kitudja e vonni a szemafor értékébõl. Vár hogy levonhassa végre (ha nem tudja azonnal).
				     ¤ semctl(semid, szemafor, parancs, érték(elhagyható)) --> Szemafor manipulációkra szolgál.
					parancs: SETVAL --> kezdõértéket így tudunk neki adni, mivel smget() után még nincs inicia-
lizálva						 IPC_RMID --> törli az adott szemafor családot

Péda program: szemafor.c


POSIXOS SZEMAFOR CSALÁD
	Fordításnál meg kell adni a -lpthreadad kapcsolót, hogy linkelje hozzá a posix szálak kezelését is.
	<semaphore.h>
		sem_init : név nélküli szemafor
		sem_open : nevesített --> (név, mód) --> egyetlen egy szemfort hoz létre, vagy kapcsolódik hozzá
					  (név, mód, engedélyek, kezdõérték) --> létrehozásnál ezt kell használni
						mód: O_CREATE, O_EXCL
			   visszatérési érték: azonosító --> semmaddr
		sem_post(semmaddr) --> egyel növeli a szemafor értékét :: 0 vagy -1
		sem_wait(semaddr) --> egyel acsökkenti a szemador értékét.
		sem_trywait --> megpróbálja csökkenteni
		sem_timedwait --> timespec típust is meg kell adni --> addig fog várni
		sem_unlink(szemafor_neve) --> törli a szemafort :: 0 vagy -1