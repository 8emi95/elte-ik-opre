./a.out & - kiírja a PID-et

kill -SIGKILL "PID pl: 8639" - mindenképp megáll a program
kill -SIGTERM "PID pl: 8639" - alapértelmezetten terminál, de meg lehet adni mit tegyen
kill -SIGUSR1 "PID pl: 8639" - az oprendszer ilyet nem küldhet, ez felhasználói jelzés

signal(SIGHTERM, SIG_DFL); - a jelhez az alapértelmezett folyamatot kapcsolja
raise("jelzés"); - saját magának küld egy "jelzés"-t

getppid() - szülõ pid-jét adja vissza


pause(); - vár, amíg jelzést nem kap
ehelyett egy inten követem, hogy érkezett-e jelzés. A handler növeli az intet, így ha megérkezett, az int változott.
while(0==i){ usleep(100); }

gyerekfolyamat elejére nem szabad jelzéskezelést betenni

joe filename.c - kiírja a tartalmat




sigprocmask.c

sigaction.c
sigaction(a,b,c); - megmondja azt is mely jelzéseket blokkolunk, ha kapunk egy jelzést

release alkalmazásban handlerbe csak megszakíthatatlan, gyors lefutású függvényeket szabad tenni

alarm - egyszeri
timer - peridódikus, milisec

sigaction.c - ki küldte a jelzést