#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <fcntl.h> //open,creat
#include <unistd.h>
#include <sys/types.h> //open
#include <sys/stat.h>
#include <errno.h> //perror, errno
#include "datatypes.h"

void print_menu()
{
	printf("1 - vendegek listazasa\n");
	printf("2 - vendeg jelentkezese\n");
	printf("3 - vendeg adatainak modositasa\n");
	printf("4 - vendeg adatainak torlese\n");
	printf("5 - rendezveny inditasa\n");
	printf("6 - rendezveny adatainak listazasa\n");
	printf("7 - rendezveny torlese\n");
	printf("ESC - kilepes\n");
}

void print_event(event_data* e)
{
	printf("%zu %s %s\n", e->id, e->name, e->place);
}

void print_guest(guest_data* g)
{
	printf("%zu %s %s %zu %s", g->id, g->name, g->email, g->event_id, ctime(&g->reg_time));
}

void list_events(event_list* ev_list)
{
	event_node* curr_ev = ev_list->head->next;
	
	while (curr_ev != NULL)
	{
		print_event(&curr_ev->event);
		curr_ev = curr_ev->next;
	}
	
}

void list_all_guests(guest_list* g_list)
{
	guest_node* curr_guest = g_list->head->next;
	
	while (curr_guest != NULL)
	{
		print_guest(&curr_guest->guest);
		curr_guest = curr_guest->next;
	}
}

void load_events(event_list* ev_list)
{
	ev_list->head = (event_node*)malloc(sizeof(event_node*));
	ev_list->last = ev_list->head;
	ev_list->head->next = NULL;
	
	event_data event;
	int ev_file = open("events.dat", O_RDONLY);
	while (read(ev_file, &event, sizeof(event)))
	{
		event_node* p = (event_node*)malloc(sizeof(event_node));
		p->event.id = event.id;
		strcpy(p->event.name, event.name);
		strcpy(p->event.place, event.place);
		p->next = NULL;
		
		ev_list->last->next = p;
		ev_list->last = p;
	}
	
	close(ev_file);
}

void load_guests(size_t* guest_id, guest_list* g_list)
{
	g_list->head = (guest_node*)malloc(sizeof(guest_node*));
	g_list->last = g_list->head;
	g_list->head->next = NULL;
	
	guest_data guest;
	int guest_file = open("guests.dat", O_RDONLY);
	read(guest_file, guest_id, sizeof(*guest_id));
	
	while (read(guest_file, &guest, sizeof(guest)))
	{
		guest_node* p = (guest_node*)malloc(sizeof(guest_node));
		p->guest.id = guest.id;
		strcpy(p->guest.name, guest.name);
		strcpy(p->guest.email, guest.email);
		p->guest.event_id = guest.event_id;
		p->guest.reg_time = guest.reg_time;
		p->next = NULL;
		
		g_list->last->next = p;
		g_list->last = p;
	}
	
	close(guest_file);
}

int main()
{
	printf("King of Stands latogatoi nyilvantartas\n");
	
	event_list ev_list;
	guest_list g_list;
	size_t guest_id = 0;;
	
	load_events(&ev_list);
	load_guests(&guest_id, &g_list);
	
	char choice;
	
	do
	{
		print_menu();
		choice = getchar();
		switch (choice)
		{
			case 1 :
				break;
			case 2:
				list_all_guests(&g_list);
				break;
			case 3:
				break;
			case 4:
				break;
			case 5:
				break;
			case 6:
				break;
			case 7:
				break;
		}
	}
	while (choice != 27);
	
	return 0;
}