#include <stdio.h>
#include <string.h>
#include <time.h>
#include "kos.h"

#define MAX_RENDEZVENY 256

char fn_rendezvenyek[] = "rendezveny.data";
char fn_vendegek[] = "vendeg.data";
char fn_tmp[] = "tmp.data";

struct rendezveny_t rendezvenyek[MAX_RENDEZVENY];
int rendezvenyek_n = 0;
int rendezveny_max_id = 0;

void empty_stdin() {
  char c;
  while ((c=getchar())!='\n' && c!=EOF) ;
}

void beolvas_rendezvenyek() {
  FILE * f;
  f = fopen(fn_rendezvenyek, "r");
  //printf("%d %d\n", rendezvenyek_n, rendezveny_max_id);
  if (f) {
    while (!(feof(f))) {
      if (fread(&(rendezvenyek[rendezvenyek_n]), sizeof(struct rendezveny_t), 1, f)) {
        if (rendezveny_max_id<rendezvenyek[rendezvenyek_n].id) {
          rendezveny_max_id = rendezvenyek[rendezvenyek_n].id;
        }
        rendezvenyek_n++;
      }
      //printf(".");
    }
    fclose(f);
  }
  //printf("%d %d\n", rendezvenyek_n, rendezveny_max_id);
}

void kiir_rendezvenyek() {
  FILE * f;
  f = fopen(fn_rendezvenyek, "w");
  fwrite(rendezvenyek, sizeof(struct rendezveny_t), rendezvenyek_n, f);
  fclose(f);
}

void lista_rendezvenyek() {
  int i;
  printf("Rendezvények száma: %d\n", rendezvenyek_n);
  printf("----------\n");
  for (i=0; i<rendezvenyek_n; i++) {
    printf("%d - %s\n", rendezvenyek[i].id, rendezvenyek[i].nev);
  }
  printf("----------\n");
}

void lista_vendegek() {
  int i;
  struct vendeg_t vendeg;
  struct tm * timeinfo;
  char timestr[32];
  FILE * f;
  f = fopen(fn_vendegek, "r");
  printf("Vendégek listája\n");
  printf("----------\n");
  int n = 0;
  if (f) {
    while (!(feof(f))) {
      if (fread(&vendeg, sizeof(struct vendeg_t), 1, f)) {
        for (i=0; i<rendezvenyek_n; i++) {
          if (rendezvenyek[i].id == vendeg.rendezveny_id)
            break;
        }
        timeinfo = localtime(&vendeg.jelentkezes_ideje);
        strftime(timestr, 31, "%Y-%m-%d %H-%M-%S", timeinfo);
        printf("%d: %s (%s)\n", ++n, vendeg.nev, vendeg.mail);
        printf("  %s - %s\n", timestr, rendezvenyek[i].nev);
        printf("----------\n");
      }
    }
    fclose(f);
  }
//  for (i=0; i<rendezvenyek_n; i++) {
//  printf("----------\n");
}

void szervezo() {
}

void parnter() {
}

void main(int argc, char** argv) {
  printf("King Of Stands - lebonyolítás\n");
  printf("-----------------------------\n");
  pid_t child;
  beolvas_rendezvenyek();
  menu();
}
